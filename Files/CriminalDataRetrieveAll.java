/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package criminaldatabase;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JAVA
 */
public class CriminalDataRetrieveAll extends javax.swing.JFrame {

    /**
     * Creates new form CriminalDataRetrieveAll
     */
    public CriminalDataRetrieveAll() {
        initComponents();
        Show_Operator();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        JTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "First Name", "Last Name", "Middle Name", "Data Of Birth", "Gender", "Age", "Criminal Address", "City", "State", "Date of arrest", "Crime Involved", "Eye Witness Id", "EyeWitness Name", "EyeWitness Address", "Complaint No.", "Eye Color", "Hair Color", "Face Type", "Other Details"
            }
        ));
        JTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTable);
        if (JTable.getColumnModel().getColumnCount() > 0) {
            JTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            JTable.getColumnModel().getColumn(1).setPreferredWidth(75);
            JTable.getColumnModel().getColumn(5).setPreferredWidth(50);
            JTable.getColumnModel().getColumn(6).setPreferredWidth(25);
            JTable.getColumnModel().getColumn(8).setPreferredWidth(25);
            JTable.getColumnModel().getColumn(9).setPreferredWidth(25);
            JTable.getColumnModel().getColumn(16).setPreferredWidth(50);
            JTable.getColumnModel().getColumn(17).setPreferredWidth(50);
            JTable.getColumnModel().getColumn(18).setPreferredWidth(50);
        }

        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton2.setText("Refresh");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jButton2)
                .addGap(70, 70, 70)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1290, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void ShowImage(int index) {
        ResourceImagesClass icr = new ResourceImagesClass();
        jLabel1.setIcon(icr.ResizeImage(getCriminal().get(index).getImage(), null, jLabel1.getWidth(), jLabel1.getHeight()));
    }

    private void JTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableMouseClicked
        int index = JTable.getSelectedRow();
        ShowImage(index);
        // TODO add your handling code here:
    }//GEN-LAST:event_JTableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ResourceImagesClass icr = new ResourceImagesClass();
        DefaultTableModel model = (DefaultTableModel) JTable.getModel();
        model.setRowCount(0);
        jLabel1.setIcon(icr.ResizeImage("", null, jLabel1.getWidth(), jLabel1.getHeight()));
        Show_Operator();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        frame.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    int criminalid, age, eyewitnessid, complaintno;

    String firstname, lastname, middlename, dateofbirth, gender, criminaladdress,
            city, state, date_of_arrest, imgpath, crimeinvolved, eyewitnessname,
            eyewitnessaddress, criminalimageeyecolor, eyecolor, haircolor, facedesc, other_detail;

    public CriminalDataRetrieveAll(int criminalid, String firstname, String lastname, String middlename,
            String dateofbirth, String gender, int age, String criminaladdress, String city,
            String state, String date_of_arrest, String crimeinvolved, int eyewitnessid,
            String eyewitnessname, String eyewitnessaddress, int complaintno, String imgpath) {

        this.criminalid = criminalid;
        this.firstname = firstname;
        this.lastname = lastname;
        this.middlename = middlename;
        this.dateofbirth = dateofbirth;
        this.gender = gender;
        this.state = state;
        this.date_of_arrest = date_of_arrest;
        this.crimeinvolved = crimeinvolved;
        this.eyewitnessid = eyewitnessid;
        this.eyewitnessname = eyewitnessname;
        this.eyewitnessaddress = eyewitnessaddress;
        this.complaintno = complaintno;
        this.imgpath = imgpath;
        this.age = age;
        this.criminaladdress = criminaladdress;
        this.city = city;

    }

    public String getImage() {
        return imgpath;
    }

//    public CriminalDataRetrieveAll(String eyecolor, String haircolor, String facedesc, String other_detail) {
//        this.eyecolor = eyecolor;
//        this.haircolor = haircolor;
//        this.facedesc = facedesc;
//        this.other_detail = other_detail;
//    }
    ArrayList<CriminalDataRetrieveAll> criminalList1;
//    ArrayList<CriminalDataRetrieveAll> criminalList2;

    public ArrayList<CriminalDataRetrieveAll> getCriminal() {
        criminalList1 = new ArrayList<CriminalDataRetrieveAll>();
//        criminalList2 = new ArrayList<CriminalDataRetrieveAll>();
        Connection con1 = DB.getConnection();
//        Connection con2 = DB.getConnection();
        String query1 = "SELECT * FROM criminaldata";
//        String query2 = "SELECT * FROM criminalimgdesc";

        Statement st1, st2;
        ResultSet rs1, rs2;

        try {
            st1 = con1.createStatement();
            rs1 = st1.executeQuery(query1);
//            st2 = con2.createStatement();
//            rs2 = st2.executeQuery(query2);
            CriminalDataRetrieveAll criminal1, criminal2;

            while (rs1.next()) {
                criminal1 = new CriminalDataRetrieveAll(rs1.getInt(2), rs1.getString(3), rs1.getString(4), rs1.getString(5), rs1.getString(6), rs1.getString(7),
                        rs1.getInt(8), rs1.getString(9), rs1.getString(10), rs1.getString(11),
                        rs1.getString(12), rs1.getString(13), rs1.getInt(14), rs1.getString(15), rs1.getString(16), rs1.getInt(17), rs1.getString(18));
                criminalList1.add(criminal1);
            }

//            while (rs2.next()) {
//                criminal2 = new CriminalDataRetrieveAll(rs2.getString(3), rs2.getString(4), rs2.getString(5), rs2.getString(6));
//                criminalList2.add(criminal2);
//            }
        } catch (SQLException e) {
            Logger.getLogger(CriminalDataRetrieveAll.class.getName()).log(Level.SEVERE, null, e);
        }
        return criminalList1;
    }

    public void Show_Operator() {
        ArrayList<CriminalDataRetrieveAll> list = getCriminal();
        System.out.println(list);
        DefaultTableModel model = (DefaultTableModel) JTable.getModel();

        Object[] row = new Object[20];
        for (int i = 0; i < list.size(); i++) {
            row[0] = criminalList1.get(i).criminalid;
            row[1] = criminalList1.get(i).firstname;
            row[2] = criminalList1.get(i).lastname;
            row[3] = criminalList1.get(i).middlename;
            row[4] = criminalList1.get(i).dateofbirth;
            row[5] = criminalList1.get(i).gender;
            row[6] = criminalList1.get(i).age;
            row[7] = criminalList1.get(i).criminaladdress;
            row[8] = criminalList1.get(i).city;
            row[9] = criminalList1.get(i).state;
            row[10] = criminalList1.get(i).date_of_arrest;
            row[11] = criminalList1.get(i).crimeinvolved;
            row[12] = criminalList1.get(i).eyewitnessid;
            row[13] = criminalList1.get(i).eyewitnessname;
            row[14] = criminalList1.get(i).eyewitnessaddress;
            row[15] = criminalList1.get(i).complaintno;
            int id = criminalList1.get(i).criminalid;
            if (DaoCriminalImgDetail.checkData(id)) {
                try {
                    Connection con = DB.getConnection();
                    PreparedStatement ps = con.prepareStatement("select * from Criminalimgdesc where criminalid=?", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                    ps.setInt(1, id);
                    ResultSet rs = ps.executeQuery();
                    rs.beforeFirst();
                    rs.next();
                    row[16] = rs.getString(3);
                    row[17] = rs.getString(4);
                    row[18] = rs.getString(5);
                    row[19] = rs.getString(6);
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(CriminalDataRetrieveAll.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                row[16] = "";
                row[17] = "";
                row[18] = "";
                row[19] = "";

            }

            model.addRow(row);
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CriminalDataRetrieveAll.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CriminalDataRetrieveAll.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CriminalDataRetrieveAll.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CriminalDataRetrieveAll.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frame = new CriminalDataRetrieveAll();
                frame.setVisible(true);
                frame.setResizable(false);
                frame.setPreferredSize(new Dimension(500, 500));
                frame.setResizable(false);
                frame.setLocationRelativeTo(null);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    static CriminalDataRetrieveAll frame;
}
